# grammer.grako

int = /[\-+0-9]+/ ;
float = /[\-+0-9]+\.[0-9]+/ ;
number = number:(float | int) ;

name = name:/[a-zA-Z_][a-zA-Z0-9_]*/ ;

call = call:(name "(" { expr "," } ")") ;

funcdef = funcdef:("define" name "(" { name } ")" "->" expr) ;
valdef = valdef:("define" name "->" expr) ;
define = @:funcdef | @:valdef ;

binop = binop:(expr ("+" | "-" | "*" | "/" | "=" | "!=") expr) ;
if = if:("if" expr "then" expr "else" expr) ;
do = do:("do" {expr}+ "end") ;
special = @:if | @:do ;
expr = @:special | @:call | @:binop | @:number | @:name ;

program = { define }+ ;