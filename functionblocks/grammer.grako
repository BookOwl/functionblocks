# grammer.grako
@@whitespace :: /[\t ]+/ 
@@comments :: /{\-.*?\-}/

int = /[\-+0-9]+/ ;
float = /[\-+0-9]+\.[0-9]+/ ;
number = number:(float | int) ;

name = name: /(?!if)(?!then)(?!else)(?!do)(?!end)[a-zA-Z_][a-zA-Z0-9_]*/ ;

string = string: /".*?"/ ;

literal = number | name | string ;

call = call:(name "(" { expr "," } ")") ;

funcdef = funcdef:("define" name "(" { name } ")" "->" expr) ;
valdef = valdef:("define" name "->" expr) ;
define = @:funcdef | @:valdef ;

binop = p1 [{ "=" p1 | ">" p1 | "<" p1 | "!=" p1 }+] ;
p1 = p2 [{ "+" p2 | "-" p2 }+] ;
p2 = p3 [{ "*" p3 | "/" p3 }+] ;
p3 = @:special | @:call | @:literal | "(" @:binop ")" ;

if = if:("if" expr "then" expr "else" expr) ;
do = do:("do" /\n/ {expr /\n/}+ "end") ;
special = @:if | @:do ;

expr = binop ;
program = { define }+ ;