# grammerbackup.grako

int = /[\-+0-9]+/ ;
float = /[\-+0-9]+\.[0-9]+/ ;
number = float | int ;

name = /[a-zA-Z_][a-zA-Z0-9_]*/ ;

call = name "(" { expr "," } ")" ;

funcdef = "define" name "(" { name } ")" "->" expr ;
valdef = "define" name "->" expr ;
define = funcdef | valdef ;

binop = expr ("+" | "-" | "*" | "/" | "=" | "!=") expr ;
if = "if" expr "then" expr "else" expr ;
do = "do" {expr}+ "end" ;
special = if | do ;
expr = special | call | binop | number | name ;

program = { define }+ ;